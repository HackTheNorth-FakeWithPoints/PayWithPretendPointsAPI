{
  "openapi": "3.0.0",
  "info": { "version": "1.0.0", "title": "Pay With Pretend Points API" },
  "components": { "schemas": {}, "parameters": {} },
  "paths": {
    "/api/v1/health": {
      "get": {
        "tags": ["Status"],
        "description": "Returns the status of the database connection.",
        "responses": {
          "200": {
            "description": "Object with database success status information.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "examples": ["SUCCESS", "ERROR"] },
                    "message": {
                      "type": "string",
                      "examples": ["Database Connection Healthy", "Database Connection Failed"]
                    },
                    "error": {
                      "anyOf": [
                        { "nullable": true },
                        { "type": "object", "properties": {} },
                        { "nullable": true },
                        { "nullable": true }
                      ],
                      "examples": [null, {}]
                    }
                  },
                  "required": ["status", "message"]
                }
              }
            }
          },
          "500": {
            "description": "Object with database error status information.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "examples": ["SUCCESS", "ERROR"] },
                    "message": {
                      "type": "string",
                      "examples": ["Database Connection Healthy", "Database Connection Failed"]
                    },
                    "error": {
                      "anyOf": [
                        { "nullable": true },
                        { "type": "object", "properties": {} },
                        { "nullable": true },
                        { "nullable": true }
                      ],
                      "examples": [null, {}]
                    }
                  },
                  "required": ["status", "message"]
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/loyalty/{memberId}/points": {
      "get": {
        "tags": ["Points Operations"],
        "description": "Gets total points from a single accounts of a member",
        "parameters": [
          { "schema": { "type": "string" }, "required": true, "name": "memberId", "in": "path" },
          { "schema": { "type": "string" }, "required": true, "name": "partnerId", "in": "header" }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "object",
                      "properties": {
                        "code": { "type": "string" },
                        "message": { "type": "string" },
                        "nestedStatus": { "type": "object" }
                      }
                    },
                    "memberId": { "type": "string" },
                    "partnerId": { "type": "string" },
                    "accountStatus": { "type": "string", "enum": ["active", "inactive", "locked"] },
                    "pointBalance": { "type": "integer" }
                  },
                  "required": ["status", "memberId", "pointBalance"]
                }
              }
            }
          },
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": { "type": "integer" },
                    "timestamp": { "type": "integer" },
                    "message": { "type": "string" }
                  },
                  "required": ["statusCode", "timestamp", "message"]
                }
              }
            }
          },
          "400": { "description": "Bad Request / validation error in given data" },
          "401": { "description": "Not authenticated" },
          "403": { "description": "Not authorized to view this resource" },
          "404": { "description": "resource not found" },
          "500": { "description": "Internal Server Error" },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": { "type": "integer" },
                    "timestamp": { "type": "integer" },
                    "message": { "type": "string" }
                  },
                  "required": ["statusCode", "timestamp", "message"]
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/loyalty/{memberId}/transactions": {
      "get": {
        "tags": ["Txn History"],
        "description": "gets transaction history from an account of a member",
        "parameters": [
          { "schema": { "type": "string" }, "required": true, "name": "memberId", "in": "path" },
          { "schema": { "type": "string" }, "required": true, "name": "partnerId", "in": "header" }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "object",
                      "properties": {
                        "code": { "type": "string" },
                        "message": { "type": "string" },
                        "nestedStatus": { "type": "object" }
                      }
                    },
                    "transactions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "refId": { "type": "string" },
                          "timestamp": { "type": "string", "format": "date-time" },
                          "partnerRefId": { "type": "string" },
                          "partnerId": { "type": "string" },
                          "amount": { "type": "integer" },
                          "txnType": { "type": "string", "enum": ["earn", "burn"] },
                          "txnDescription": { "type": "array", "items": { "type": "string" } }
                        },
                        "required": ["refId", "timestamp", "partnerId", "amount", "txnType", "txnDescription"]
                      }
                    }
                  },
                  "required": ["status", "transactions"]
                }
              }
            }
          },
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": { "type": "integer" },
                    "timestamp": { "type": "integer" },
                    "message": { "type": "string" }
                  },
                  "required": ["statusCode", "timestamp", "message"]
                }
              }
            }
          },
          "400": { "description": "Bad Request / validation error in given data" },
          "401": { "description": "Not authenticated" },
          "403": { "description": "Not authorized to view this resource" },
          "404": { "description": "resource not found" },
          "500": { "description": "Internal Server Error" },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": { "type": "integer" },
                    "timestamp": { "type": "integer" },
                    "message": { "type": "string" }
                  },
                  "required": ["statusCode", "timestamp", "message"]
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Txn History"],
        "description": "earn or burn points for a member for a partner",
        "parameters": [
          { "schema": { "type": "string" }, "required": true, "name": "memberId", "in": "path" },
          { "schema": { "type": "string" }, "required": true, "name": "partnerId", "in": "header" }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "txnDescription": {
                    "type": "object",
                    "properties": {
                      "refId": { "type": "string" },
                      "timestamp": { "type": "string", "format": "date-time" },
                      "partnerRefId": { "type": "string" },
                      "partnerId": { "type": "string" },
                      "amount": { "type": "integer" },
                      "txnType": { "type": "string", "enum": ["earn", "burn"] },
                      "txnDescription": { "type": "array", "items": { "type": "string" } }
                    },
                    "required": ["refId", "timestamp", "partnerId", "amount", "txnType", "txnDescription"]
                  }
                },
                "required": ["txnDescription"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "object",
                      "properties": {
                        "code": { "type": "string" },
                        "message": { "type": "string" },
                        "nestedStatus": { "type": "object" }
                      }
                    },
                    "txnDescription": {
                      "type": "object",
                      "properties": {
                        "refId": { "type": "string" },
                        "timestamp": { "type": "string", "format": "date-time" },
                        "partnerRefId": { "type": "string" },
                        "partnerId": { "type": "string" },
                        "amount": { "type": "integer" },
                        "txnType": { "type": "string", "enum": ["earn", "burn"] },
                        "txnDescription": { "type": "array", "items": { "type": "string" } }
                      },
                      "required": ["refId", "timestamp", "partnerId", "amount", "txnType", "txnDescription"]
                    }
                  },
                  "required": ["status", "txnDescription"]
                }
              }
            }
          },
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": { "type": "integer" },
                    "timestamp": { "type": "integer" },
                    "message": { "type": "string" }
                  },
                  "required": ["statusCode", "timestamp", "message"]
                }
              }
            }
          },
          "400": { "description": "Bad Request / validation error in given data" },
          "401": { "description": "Not authenticated" },
          "403": { "description": "Not authorized to view this resource" },
          "404": { "description": "resource not found" },
          "500": { "description": "Internal Server Error" },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": { "type": "integer" },
                    "timestamp": { "type": "integer" },
                    "message": { "type": "string" }
                  },
                  "required": ["statusCode", "timestamp", "message"]
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/loyalty/{memberId}/transactions/{txnId}": {
      "get": {
        "tags": ["Txn History"],
        "description": "get the details of a single txn",
        "parameters": [
          { "schema": { "type": "string" }, "required": true, "name": "memberId", "in": "path" },
          { "schema": { "type": "string" }, "required": true, "name": "txnId", "in": "path" },
          { "schema": { "type": "string" }, "required": true, "name": "partnerId", "in": "header" }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "object",
                      "properties": {
                        "code": { "type": "string" },
                        "message": { "type": "string" },
                        "nestedStatus": { "type": "object" }
                      }
                    },
                    "transaction": {
                      "type": "object",
                      "properties": {
                        "refId": { "type": "string" },
                        "timestamp": { "type": "string", "format": "date-time" },
                        "partnerRefId": { "type": "string" },
                        "partnerId": { "type": "string" },
                        "amount": { "type": "integer" },
                        "txnType": { "type": "string", "enum": ["earn", "burn"] },
                        "txnDescription": { "type": "array", "items": { "type": "string" } }
                      },
                      "required": ["refId", "timestamp", "partnerId", "amount", "txnType", "txnDescription"]
                    }
                  },
                  "required": ["status", "transaction"]
                }
              }
            }
          },
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": { "type": "integer" },
                    "timestamp": { "type": "integer" },
                    "message": { "type": "string" }
                  },
                  "required": ["statusCode", "timestamp", "message"]
                }
              }
            }
          },
          "400": { "description": "Bad Request / validation error in given data" },
          "401": { "description": "Not authenticated" },
          "403": { "description": "Not authorized to view this resource" },
          "404": { "description": "resource not found" },
          "500": { "description": "Internal Server Error" },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": { "type": "integer" },
                    "timestamp": { "type": "integer" },
                    "message": { "type": "string" }
                  },
                  "required": ["statusCode", "timestamp", "message"]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Txn History"],
        "description": "Reverses txn",
        "parameters": [
          { "schema": { "type": "string" }, "required": true, "name": "memberId", "in": "path" },
          { "schema": { "type": "string" }, "required": true, "name": "txnId", "in": "path" },
          { "schema": { "type": "string" }, "required": true, "name": "partnerId", "in": "header" }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "object",
                      "properties": {
                        "code": { "type": "string" },
                        "message": { "type": "string" },
                        "nestedStatus": { "type": "object" }
                      }
                    },
                    "transaction": {
                      "type": "object",
                      "properties": {
                        "refId": { "type": "string" },
                        "timestamp": { "type": "string", "format": "date-time" },
                        "partnerRefId": { "type": "string" },
                        "partnerId": { "type": "string" },
                        "amount": { "type": "integer" },
                        "txnType": { "type": "string", "enum": ["earn", "burn"] },
                        "txnDescription": { "type": "array", "items": { "type": "string" } }
                      },
                      "required": ["refId", "timestamp", "partnerId", "amount", "txnType", "txnDescription"]
                    }
                  },
                  "required": ["status", "transaction"]
                }
              }
            }
          },
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": { "type": "integer" },
                    "timestamp": { "type": "integer" },
                    "message": { "type": "string" }
                  },
                  "required": ["statusCode", "timestamp", "message"]
                }
              }
            }
          },
          "400": { "description": "Bad Request / validation error in given data" },
          "401": { "description": "Not authenticated" },
          "403": { "description": "Not authorized to view this resource" },
          "404": { "description": "resource not found" },
          "500": { "description": "Internal Server Error" },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": { "type": "integer" },
                    "timestamp": { "type": "integer" },
                    "message": { "type": "string" }
                  },
                  "required": ["statusCode", "timestamp", "message"]
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Txn History"],
        "description": "update the details of a single txn",
        "parameters": [
          { "schema": { "type": "string" }, "required": true, "name": "memberId", "in": "path" },
          { "schema": { "type": "string" }, "required": true, "name": "txnId", "in": "path" },
          { "schema": { "type": "string" }, "required": true, "name": "partnerId", "in": "header" }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "txnDescription": {
                    "type": "object",
                    "properties": {
                      "refId": { "type": "string" },
                      "timestamp": { "type": "string", "format": "date-time" },
                      "partnerRefId": { "type": "string" },
                      "partnerId": { "type": "string" },
                      "amount": { "type": "integer" },
                      "txnType": { "type": "string", "enum": ["earn", "burn"] },
                      "txnDescription": { "type": "array", "items": { "type": "string" } }
                    },
                    "required": ["refId", "timestamp", "partnerId", "amount", "txnType", "txnDescription"]
                  }
                },
                "required": ["txnDescription"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "object",
                      "properties": {
                        "code": { "type": "string" },
                        "message": { "type": "string" },
                        "nestedStatus": { "type": "object" }
                      }
                    },
                    "transaction": {
                      "type": "object",
                      "properties": {
                        "refId": { "type": "string" },
                        "timestamp": { "type": "string", "format": "date-time" },
                        "partnerRefId": { "type": "string" },
                        "partnerId": { "type": "string" },
                        "amount": { "type": "integer" },
                        "txnType": { "type": "string", "enum": ["earn", "burn"] },
                        "txnDescription": { "type": "array", "items": { "type": "string" } }
                      },
                      "required": ["refId", "timestamp", "partnerId", "amount", "txnType", "txnDescription"]
                    }
                  },
                  "required": ["status", "transaction"]
                }
              }
            }
          },
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": { "type": "integer" },
                    "timestamp": { "type": "integer" },
                    "message": { "type": "string" }
                  },
                  "required": ["statusCode", "timestamp", "message"]
                }
              }
            }
          },
          "400": { "description": "Bad Request / validation error in given data" },
          "401": { "description": "Not authenticated" },
          "403": { "description": "Not authorized to view this resource" },
          "404": { "description": "resource not found" },
          "500": { "description": "Internal Server Error" },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": { "type": "integer" },
                    "timestamp": { "type": "integer" },
                    "message": { "type": "string" }
                  },
                  "required": ["statusCode", "timestamp", "message"]
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/loyalty/partners": {
      "post": {
        "tags": ["Partner Operations"],
        "description": "create partner record",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": { "type": "string", "example": "ACTIVE" },
                  "name": { "type": "string", "example": "Partner Name" },
                  "description": { "type": "string", "example": "Partner Description" },
                  "contactId": { "type": "integer", "example": 1 },
                  "permission": {
                    "type": "string",
                    "enum": ["Read", "Read", "Write", "Balance Inquiry"],
                    "example": "Read"
                  },
                  "emailId": { "type": "string", "example": "partner@example.com" },
                  "password": { "type": "string", "example": "******************" }
                },
                "required": ["status", "name", "description", "contactId", "permission", "emailId", "password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "partner": {
                      "type": "object",
                      "properties": {
                        "status": { "type": "string", "example": "ACTIVE" },
                        "name": { "type": "string", "example": "Partner Name" },
                        "description": { "type": "string", "example": "Partner Description" },
                        "contactId": { "type": "integer", "example": 1 },
                        "permission": {
                          "type": "string",
                          "enum": ["Read", "Read", "Write", "Balance Inquiry"],
                          "example": "Read"
                        },
                        "emailId": { "type": "string", "example": "partner@example.com" },
                        "password": { "type": "string", "example": "******************" }
                      },
                      "required": ["status", "name", "description", "contactId", "permission", "emailId", "password"]
                    }
                  },
                  "required": ["message", "partner"]
                }
              }
            }
          },
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": { "type": "integer" },
                    "timestamp": { "type": "integer" },
                    "message": { "type": "string" }
                  },
                  "required": ["statusCode", "timestamp", "message"]
                }
              }
            }
          },
          "400": { "description": "Bad Request / validation error in given data" },
          "401": { "description": "Not authenticated" },
          "403": { "description": "Not authorized to view this resource" },
          "404": { "description": "resource not found" },
          "500": { "description": "Internal Server Error" },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": { "type": "integer" },
                    "timestamp": { "type": "integer" },
                    "message": { "type": "string" }
                  },
                  "required": ["statusCode", "timestamp", "message"]
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/loyalty/partners/{partnerId}": {
      "get": {
        "tags": ["Partner Operations"],
        "description": "gets details of a particular partner",
        "parameters": [
          { "schema": { "type": "string", "example": "1" }, "required": true, "name": "partnerId", "in": "path" }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "partner": {
                      "type": "object",
                      "properties": {
                        "status": { "type": "string", "example": "ACTIVE" },
                        "name": { "type": "string", "example": "Partner Name" },
                        "description": { "type": "string", "example": "Partner Description" },
                        "contactId": { "type": "integer", "example": 1 },
                        "permission": {
                          "type": "string",
                          "enum": ["Read", "Read", "Write", "Balance Inquiry"],
                          "example": "Read"
                        },
                        "emailId": { "type": "string", "example": "partner@example.com" },
                        "password": { "type": "string", "example": "******************" }
                      },
                      "required": ["status", "name", "description", "contactId", "permission", "emailId", "password"]
                    }
                  },
                  "required": ["message", "partner"]
                }
              }
            }
          },
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": { "type": "integer" },
                    "timestamp": { "type": "integer" },
                    "message": { "type": "string" }
                  },
                  "required": ["statusCode", "timestamp", "message"]
                }
              }
            }
          },
          "400": { "description": "Bad Request / validation error in given data" },
          "401": { "description": "Not authenticated" },
          "403": { "description": "Not authorized to view this resource" },
          "404": { "description": "resource not found" },
          "500": { "description": "Internal Server Error" },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": { "type": "integer" },
                    "timestamp": { "type": "integer" },
                    "message": { "type": "string" }
                  },
                  "required": ["statusCode", "timestamp", "message"]
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["Partner Operations"],
        "description": "updates details of a particular partner",
        "parameters": [
          { "schema": { "type": "string", "example": "1" }, "required": true, "name": "partnerId", "in": "path" }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": { "type": "string", "example": "ACTIVE" },
                  "name": { "type": "string", "example": "Partner Name" },
                  "description": { "type": "string", "example": "Partner Description" },
                  "contactId": { "type": "integer", "example": 1 },
                  "permission": {
                    "type": "string",
                    "enum": ["Read", "Read", "Write", "Balance Inquiry"],
                    "example": "Read"
                  },
                  "emailId": { "type": "string", "example": "partner@example.com" },
                  "password": { "type": "string", "example": "******************" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "partner": {
                      "type": "object",
                      "properties": {
                        "status": { "type": "string", "example": "ACTIVE" },
                        "name": { "type": "string", "example": "Partner Name" },
                        "description": { "type": "string", "example": "Partner Description" },
                        "contactId": { "type": "integer", "example": 1 },
                        "permission": {
                          "type": "string",
                          "enum": ["Read", "Read", "Write", "Balance Inquiry"],
                          "example": "Read"
                        },
                        "emailId": { "type": "string", "example": "partner@example.com" },
                        "password": { "type": "string", "example": "******************" }
                      },
                      "required": ["status", "name", "description", "contactId", "permission", "emailId", "password"]
                    }
                  },
                  "required": ["message", "partner"]
                }
              }
            }
          },
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": { "type": "integer" },
                    "timestamp": { "type": "integer" },
                    "message": { "type": "string" }
                  },
                  "required": ["statusCode", "timestamp", "message"]
                }
              }
            }
          },
          "400": { "description": "Bad Request / validation error in given data" },
          "401": { "description": "Not authenticated" },
          "403": { "description": "Not authorized to view this resource" },
          "404": { "description": "resource not found" },
          "500": { "description": "Internal Server Error" },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": { "type": "integer" },
                    "timestamp": { "type": "integer" },
                    "message": { "type": "string" }
                  },
                  "required": ["statusCode", "timestamp", "message"]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Partner Operations"],
        "description": "deletes details of a particular partner",
        "parameters": [
          { "schema": { "type": "string", "example": "1" }, "required": true, "name": "partnerId", "in": "path" }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "message": { "type": "string" }, "count": { "type": "integer", "example": 1 } },
                  "required": ["message", "count"]
                }
              }
            }
          },
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": { "type": "integer" },
                    "timestamp": { "type": "integer" },
                    "message": { "type": "string" }
                  },
                  "required": ["statusCode", "timestamp", "message"]
                }
              }
            }
          },
          "400": { "description": "Bad Request / validation error in given data" },
          "401": { "description": "Not authenticated" },
          "403": { "description": "Not authorized to view this resource" },
          "404": { "description": "resource not found" },
          "500": { "description": "Internal Server Error" },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": { "type": "integer" },
                    "timestamp": { "type": "integer" },
                    "message": { "type": "string" }
                  },
                  "required": ["statusCode", "timestamp", "message"]
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/loyalty/partners/{partnerId}/transactions": {
      "get": {
        "tags": ["Txn History By Partner"],
        "description": "gets txn history for a single partner",
        "parameters": [{ "schema": { "type": "string" }, "required": true, "name": "partnerId", "in": "path" }],
        "responses": {
          "200": {
            "description": "successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "object",
                      "properties": {
                        "code": { "type": "string" },
                        "message": { "type": "string" },
                        "nestedStatus": { "type": "object" }
                      }
                    },
                    "transactions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "refId": { "type": "string" },
                          "timestamp": { "type": "string", "format": "date-time" },
                          "partnerRefId": { "type": "string" },
                          "partnerId": { "type": "string" },
                          "amount": { "type": "integer" },
                          "txnType": { "type": "string", "enum": ["earn", "burn"] },
                          "txnDescription": { "type": "array", "items": { "type": "string" } }
                        },
                        "required": ["refId", "timestamp", "partnerId", "amount", "txnType", "txnDescription"]
                      }
                    }
                  },
                  "required": ["status", "transactions"]
                }
              }
            }
          },
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": { "type": "integer" },
                    "timestamp": { "type": "integer" },
                    "message": { "type": "string" }
                  },
                  "required": ["statusCode", "timestamp", "message"]
                }
              }
            }
          },
          "400": { "description": "Bad Request / validation error in given data" },
          "401": { "description": "Not authenticated" },
          "403": { "description": "Not authorized to view this resource" },
          "404": { "description": "resource not found" },
          "500": { "description": "Internal Server Error" },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": { "type": "integer" },
                    "timestamp": { "type": "integer" },
                    "message": { "type": "string" }
                  },
                  "required": ["statusCode", "timestamp", "message"]
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/loyalty/partners/{partnerId}/transactions/{txnId}": {
      "get": {
        "tags": ["Txn History"],
        "description": "get the details of a single txn",
        "parameters": [
          { "schema": { "type": "string" }, "required": true, "name": "partnerId", "in": "path" },
          { "schema": { "type": "string" }, "required": true, "name": "txnId", "in": "path" }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "object",
                      "properties": {
                        "code": { "type": "string" },
                        "message": { "type": "string" },
                        "nestedStatus": { "type": "object" }
                      }
                    },
                    "transaction": {
                      "type": "object",
                      "properties": {
                        "refId": { "type": "string" },
                        "timestamp": { "type": "string", "format": "date-time" },
                        "partnerRefId": { "type": "string" },
                        "partnerId": { "type": "string" },
                        "amount": { "type": "integer" },
                        "txnType": { "type": "string", "enum": ["earn", "burn"] },
                        "txnDescription": { "type": "array", "items": { "type": "string" } }
                      },
                      "required": ["refId", "timestamp", "partnerId", "amount", "txnType", "txnDescription"]
                    }
                  },
                  "required": ["status", "transaction"]
                }
              }
            }
          },
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": { "type": "integer" },
                    "timestamp": { "type": "integer" },
                    "message": { "type": "string" }
                  },
                  "required": ["statusCode", "timestamp", "message"]
                }
              }
            }
          },
          "400": { "description": "Bad Request / validation error in given data" },
          "401": { "description": "Not authenticated" },
          "403": { "description": "Not authorized to view this resource" },
          "404": { "description": "resource not found" },
          "500": { "description": "Internal Server Error" },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": { "type": "integer" },
                    "timestamp": { "type": "integer" },
                    "message": { "type": "string" }
                  },
                  "required": ["statusCode", "timestamp", "message"]
                }
              }
            }
          }
        }
      }
    }
  }
}
